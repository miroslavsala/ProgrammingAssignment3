if (num == "worst") {
num <- as.numeric(nrow(subDf))
}
result <- subDf[num, 2]
return(result)
stop()
}
if (outcome == "heart failure") {
subDf <- df[df$State == state,]
subDf$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure <- as.numeric(subDf$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)
subDf <- subDf[complete.cases(subDf$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure),]
subDf <- with(subDf, subDf[order(subDf$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure, subDf$Hospital.Name),])
## Transform "num"
if (num == "best") {
num <- 1
}
if (num == "worst") {
num <- as.numeric(nrow(subDf))
}
result <- subDf[num, 2]
return(result)
stop()
}
if (outcome == "pneumonia") {
subDf <- df[df$State == state,]
subDf$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia <- as.numeric(subDf$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)
subDf <- subDf[complete.cases(subDf$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia),]
subDf <- with(subDf, subDf[order(subDf$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia, subDf$Hospital.Name),])
## Transform "num"
if (num == "best") {
num <- 1
}
if (num == "worst") {
num <- as.numeric(nrow(subDf))
}
result <- subDf[num, 2]
return(result)
stop()
}
stop()
}
rankhospital("TX", "heart failure", 4)      # Detar
rankhospital("MD", "heart attack", "worst") # Harford
rankhospital("MN", "heart attack", 5000)    # NA
# Testing of the function
debug(rankhospital)
rankhospital("MD", "heart attack", "worst") # Harford
View(subDf)
View(subDf)
?rank
## MTCARTS How can one calculate the average miles per gallon (mpg)
## by number of cylinders in the car (cyl)? Select all that apply.
data(mtcars)
split(mtcars, mtcars$cyl)
split <- split(mtcars, mtcars$cyl)
sapply(mtcars, cyl, mean)
lapply(mtcars, mean)
tapply(mtcars$mpg, mtcars$cyl, mean) ## YES
## Read outcome data
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
df$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack <- as.numeric(df$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
df <- df[complete.cases(subDf$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack),]
df <- df[complete.cases(df$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack),]
df <- with(df, df[order(df$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, df$Hospital.Name),])
View(df)
df <- with(df, df[order(df$State, df$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, df$Hospital.Name),])
View(df)
result <- tapply(df$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, df$Hospital.Name, df[4,])
library(dplyr)
?filter
?slice
mtcars <- data(mtcars)
data(mtcars)
by_cyl <- group_by(mtcars, cyl)
View(by_cyl)
df %>% group_by(df$State) %>% df[num,2]
num <- 1
df %>% group_by(df$State) %>% df[num,2]
df %>% group_by(df$State) %>% df[rank(df$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)==num,]
df %>% group_by(df$State) %>% df[rank(,df$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)==num]
df %>% group_by(df$State) %>% top_n(n=num, wt = df$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
result <- df %>% group_by(df$State) %>% top_n(n=num, wt = df$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
set.seed(123)
d <- data.frame(
x   = runif(90),
grp = gl(3, 30))
d %>%
group_by(grp) %>%
top_n(n = 5, wt = x)
swirl()
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
exit()
menu()
main()
by_cyl <- group_by(mtcars, cyl)
View(by_cyl)
View(by_cyl)
slice <- slice(by_cyl, 1:2)
View(slice)
View(by_cyl)
num <-5
by_state <- group_by(df, df$State)
slice <- slice(by_state, num)
View(slice)
sliced <- slice(by_state, num)
result <- data.frame(sliced$Hospital.Name, sliced$State)
View(result)
return(result)
num <- 10
by_state <- group_by(df, df$State)
sliced <- slice(by_state, num)
result <- data.frame(sliced$Hospital.Name, sliced$State)
View(result)
num <- 5000
sliced <- slice(by_state, num)
result <- data.frame(sliced$Hospital.Name, sliced$State)
View(result)
num <- 50
sliced <- slice(by_state, num)
result <- data.frame(sliced$Hospital.Name, sliced$State)
View(result)
rankall <- function(outcome, num){
## Read outcome data
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
if (!(outcome %in% c("heart attack", "heart failure", "pneumonia"))) {
stop("invalid outcome")
}
## For each state, find the hospital of the given rank
if (outcome == "heart attack") {
df$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack <- as.numeric(df$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
df <- df[complete.cases(df$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack),]
df <- with(df, df[order(df$State, df$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, df$Hospital.Name),])
## Transform "num"
if (num == "best") {
num <- 1
}
if (num == "worst") {
num <- as.numeric(nrow(subDf))
}
by_state <- group_by(df, df$State)
sliced <- slice(by_state, num)
result <- data.frame(sliced$Hospital.Name, sliced$State)
return(result)
stop()
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
}
head(rankall("heart attack", 20), 10)
?slice
?merge
result2 <- merge(result, unique(df$State) )
View(result2)
result2 <- merge(result, unique(df$State), by = NULL)
unique(df$State)
View(result2)
by_state <- group_by(df, df$State)
sliced <- slice(by_state, num)
result <- data.frame(sliced$Hospital.Name, sliced$State)
result2 <- merge(result, unique(df$State), by = sliced.State, all = TRUE)
result2 <- merge(result, unique(df$State), by = sliced$State, all = TRUE)
result2 <- merge(result, unique(df$State), by = State, all = TRUE)
unique_t <- unique(df$State)
unique_t <- as.data.frame(unique(df$State))
View(unique_t)
View(result)
?colnames
colnames(unique_t) <- "sliced.State"
View(unique_t)
View(sliced)
View(result)
result2 <- merge(result, unique_t, by = sliced.State, all = TRUE)
colnames(unique_t) <- "sliced.State"
result2 <- merge(result, unique_t, by = sliced.State, all = TRUE)
result2 <- merge(result2, unique_t, by = sliced.State, all = TRUE)
result2 <- merge(result2, unique_t, by = result2$sliced.State, all = TRUE)
result2 <- merge(result, unique_t, by = result$sliced.State, all = TRUE)
result <- data.frame(sliced$Hospital.Name, sliced$State)
View(result)
View(unique_t)
result2 <- merge(result, unique_t, by = sliced.State, all = TRUE)
?merge
result2 <- merge(result, unique_t, all = TRUE)
View(result2)
result2 <- with(result2, result2[order(sliced.State),])
View(result2)
result2 <- with(result2, result2[order(result2$sliced.State),])
View(result2)
result2 <- with(result2, result2[order(result2$sliced.State),])
return(result)
View(result2)
colnames(result2)
result2 <- with(result2, result2[order(result2$sliced.State),])
result2 <- with(result2, result2[order(result2$sliced.State),])
View(result2)
head(rankall("heart attack", 20), 10)
colnames(result2) <-c("hospital","state")
View(result2)
View(result2)
pokus <- tapply(df, df$State, slice(num))
pokus <- tapply(df$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, df$State, slice(num))
pokus <- tapply(df$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, df$State, slice(by_state, num))
pokus <- tapply(df$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, df$State, slice)
pokus <- tapply(df$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, df$State, min)
funkce <- function(){
by_state <- group_by(df, df$State)
slice(by_state, num)
}
pokus <- tapply(df$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, df$State, funkce)
?slice.index
head(rankall("heart attack", 20), 10)
tail(rankall("heart failure"), 10)
rankall <- function(outcome, num){
## Read outcome data
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
if (!(outcome %in% c("heart attack", "heart failure", "pneumonia"))) {
stop("invalid outcome")
}
## For each state, find the hospital of the given rank
if (outcome == "heart attack") {
df$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack <- as.numeric(df$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
df <- df[complete.cases(df$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack),]
df <- with(df, df[order(df$State, df$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, df$Hospital.Name),])
## Transform "num"
if (num == "best") {
num <- 1
}
if (num == "worst") {
num <- as.numeric(nrow(subDf))
}
by_state <- group_by(df, df$State)
sliced <- slice(by_state, num)
result <- data.frame(sliced$Hospital.Name, sliced$State)
unique_t <- as.data.frame(unique(df$State))
colnames(unique_t) <- "sliced.State"
result2 <- merge(result, unique_t, all = TRUE)
result2 <- with(result2, result2[order(result2$sliced.State),])
colnames(result2) <- c("hospital","state")
return(result)
colnames(result2)
stop()
}
if (outcome == "heart failure") {
df$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure <- as.numeric(df$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)
df <- df[complete.cases(df$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure),]
df <- with(df, df[order(df$State, df$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure, df$Hospital.Name),])
## Transform "num"
if (num == "best") {
num <- 1
}
if (num == "worst") {
num <- as.numeric(nrow(subDf))
}
by_state <- group_by(df, df$State)
sliced <- slice(by_state, num)
result <- data.frame(sliced$Hospital.Name, sliced$State)
unique_t <- as.data.frame(unique(df$State))
colnames(unique_t) <- "sliced.State"
result2 <- merge(result, unique_t, all = TRUE)
result2 <- with(result2, result2[order(result2$sliced.State),])
colnames(result2) <- c("hospital","state")
return(result)
colnames(result2)
stop()
}
if (outcome == "pneumonia") {
df$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia <- as.numeric(df$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)
df <- df[complete.cases(df$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia),]
df <- with(df, df[order(df$State, df$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia, df$Hospital.Name),])
## Transform "num"
if (num == "best") {
num <- 1
}
if (num == "worst") {
num <- as.numeric(nrow(subDf))
}
by_state <- group_by(df, df$State)
sliced <- slice(by_state, num)
result <- data.frame(sliced$Hospital.Name, sliced$State)
unique_t <- as.data.frame(unique(df$State))
colnames(unique_t) <- "sliced.State"
result2 <- merge(result, unique_t, all = TRUE)
result2 <- with(result2, result2[order(result2$sliced.State),])
colnames(result2) <- c("hospital","state")
return(result)
colnames(result2)
stop()
}
}
head(rankall("heart attack", 20), 10)
tail(rankall("heart failure"), 10)
best <- function(state, outcome) {
## Read outcome data
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
if (!(state %in% unique(df$State))) {
stop("invalid state")
}
if (!(outcome %in% c("heart attack", "heart failure", "pneumonia"))) {
stop("invalid outcome")
}
## Return hospital name in that state with lowest 30-day death rate
if (outcome == "heart attack") {
subDf <- df[df$State == state,]
subDf$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack <- as.numeric(subDf$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
result <- subDf[subDf$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack == min(subDf$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, na.rm=TRUE),]
if (nrow(result) > 1) {
result <- with(result,  result[order(result$Hospital.Name) , ])
}
return(result[1, 2])
stop()
}
if (outcome == "heart failure") {
subDf <- df[df$State == state,]
subDf$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure <- as.numeric(subDf$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)
result <- subDf[subDf$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure == min(subDf$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure, na.rm=TRUE),]
if (nrow(result) > 1) {
result <- with(result,  result[order(result$Hospital.Name) , ])
}
return(result[1, 2])
stop()
}
if (outcome == "pneumonia") {
subDf <- df[df$State == state,]
subDf$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia <- as.numeric(subDf$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)
result <- subDf[subDf$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia == min(subDf$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia, na.rm=TRUE),]
if (nrow(result) > 1) {
result <- with(result,  result[order(result$Hospital.Name) , ])
}
return(result[1, 2])
stop()
}
stop()
}
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
rankhospital <- function(state, outcome, num) {
## Read outcome data
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state, outcome, and num are valid
if (!(state %in% unique(df$State))) {
stop("invalid state")
}
if (!(outcome %in% c("heart attack", "heart failure", "pneumonia"))) {
stop("invalid outcome")
}
if (is.integer(num)) {
if (num > nrow(df[df$State == state,])) {
stop("NA")
}
}
## Return hospital name in that state with lowest 30-day death rate
if (outcome == "heart attack") {
subDf <- df[df$State == state,]
subDf$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack <- as.numeric(subDf$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
subDf <- subDf[complete.cases(subDf$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack),]
subDf <- with(subDf, subDf[order(subDf$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, subDf$Hospital.Name),])
## Transform "num"
if (num == "best") {
num <- 1
}
if (num == "worst") {
num <- as.numeric(nrow(subDf))
}
result <- subDf[num, 2]
return(result)
stop()
}
if (outcome == "heart failure") {
subDf <- df[df$State == state,]
subDf$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure <- as.numeric(subDf$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)
subDf <- subDf[complete.cases(subDf$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure),]
subDf <- with(subDf, subDf[order(subDf$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure, subDf$Hospital.Name),])
## Transform "num"
if (num == "best") {
num <- 1
}
if (num == "worst") {
num <- as.numeric(nrow(subDf))
}
result <- subDf[num, 2]
return(result)
stop()
}
if (outcome == "pneumonia") {
subDf <- df[df$State == state,]
subDf$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia <- as.numeric(subDf$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)
subDf <- subDf[complete.cases(subDf$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia),]
subDf <- with(subDf, subDf[order(subDf$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia, subDf$Hospital.Name),])
## Transform "num"
if (num == "best") {
num <- 1
}
if (num == "worst") {
num <- as.numeric(nrow(subDf))
}
result <- subDf[num, 2]
return(result)
stop()
}
stop()
}
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
rankall <- function(outcome, num){
## Read outcome data
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
if (!(outcome %in% c("heart attack", "heart failure", "pneumonia"))) {
stop("invalid outcome")
}
## For each state, find the hospital of the given rank
if (outcome == "heart attack") {
df$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack <- as.numeric(df$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
df <- df[complete.cases(df$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack),]
df <- with(df, df[order(df$State, df$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, df$Hospital.Name),])
## Transform "num"
if (num == "best") {
num <- 1
}
if (num == "worst") {
num <- as.numeric(nrow(subDf))
}
by_state <- group_by(df, df$State)
sliced <- slice(by_state, num)
result <- data.frame(sliced$Hospital.Name, sliced$State)
unique_t <- as.data.frame(unique(df$State))
colnames(unique_t) <- "sliced.State"
result2 <- merge(result, unique_t, all = TRUE)
result2 <- with(result2, result2[order(result2$sliced.State),])
colnames(result2) <- c("hospital","state")
return(result)
colnames(result2)
stop()
}
if (outcome == "heart failure") {
df$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure <- as.numeric(df$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)
df <- df[complete.cases(df$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure),]
df <- with(df, df[order(df$State, df$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure, df$Hospital.Name),])
## Transform "num"
if (num == "best") {
num <- 1
}
if (num == "worst") {
num <- as.numeric(nrow(subDf))
}
by_state <- group_by(df, df$State)
sliced <- slice(by_state, num)
result <- data.frame(sliced$Hospital.Name, sliced$State)
unique_t <- as.data.frame(unique(df$State))
colnames(unique_t) <- "sliced.State"
result2 <- merge(result, unique_t, all = TRUE)
result2 <- with(result2, result2[order(result2$sliced.State),])
colnames(result2) <- c("hospital","state")
return(result)
colnames(result2)
stop()
}
if (outcome == "pneumonia") {
df$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia <- as.numeric(df$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)
df <- df[complete.cases(df$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia),]
df <- with(df, df[order(df$State, df$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia, df$Hospital.Name),])
## Transform "num"
if (num == "best") {
num <- 1
}
if (num == "worst") {
num <- as.numeric(nrow(subDf))
}
by_state <- group_by(df, df$State)
sliced <- slice(by_state, num)
result <- data.frame(sliced$Hospital.Name, sliced$State)
unique_t <- as.data.frame(unique(df$State))
colnames(unique_t) <- "sliced.State"
result2 <- merge(result, unique_t, all = TRUE)
result2 <- with(result2, result2[order(result2$sliced.State),])
colnames(result2) <- c("hospital","state")
return(result)
colnames(result2)
stop()
}
}
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
View(r)
View(r)
## Read outcome data
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
View(df)
r <- rankall("heart attack", 4)
View(r)
as.character(subset(r, state == "HI")$Sliced.Hospital.Name)
View(r)
r <- rankall("heart attack", 10)
View(r)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "HI")$hospital)
View(r)
rankhospital("NJ", "pneumonia", "worst")
rankhospital("HI", "heart attack", 4)
rankhospital("NV", "heart failure", 10)
